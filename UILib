local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local VRService = game:GetService("VRService")

-- Utility Functions
local function FormatNumber(Number)
	return string.format("%.2f", Number):gsub("%.?0+$", "")
end

local function CreateCorner(Parent, Radius)
	local Corner = Instance.new("UICorner", Parent)
	Corner.CornerRadius = UDim.new(0, Radius)
end

local function CreateStroke(Parent, Color, Thickness, Transparency)
	local Stroke = Instance.new("UIStroke", Parent)
	Stroke.Color = Color
	Stroke.Thickness = Thickness or 1
	Stroke.Transparency = Transparency or 0
end

-- UI Library
local UILib = {}

-- VR UI Setup
local VRUI = {
	Background = nil,
	Base = nil,
	Billboard = nil
}

function UILib:CreateWindow(Title, UseCoreGui, Size)
	local ChosenGui = UseCoreGui and game:GetService("CoreGui") or game.Players.LocalPlayer:WaitForChild("PlayerGui")

	local ScreenGui = Instance.new("ScreenGui")
	ScreenGui.Name = "UI"
	ScreenGui.Parent = ChosenGui
	ScreenGui.ResetOnSpawn = false

	local VRMenuParts = Instance.new("Folder", workspace)
	VRMenuParts.Name = "VRMenuParts"

	VRUI.Base = Instance.new("Part")
	VRUI.Base.Size = Vector3.new(0.01, 0.01, 0.01)
	VRUI.Base.Transparency = 1
	VRUI.Base.CanCollide = false
	VRUI.Base.Massless = true
	VRUI.Base.Parent = VRMenuParts

	local BaseWeld = Instance.new("Weld")
	if workspace.CurrentCamera:FindFirstChild("VirtualHands") then
		BaseWeld.Part0 = workspace.CurrentCamera:WaitForChild("VirtualHands"):WaitForChild("LeftHand")
	else
		BaseWeld.Enabled = false
		VRUI.Base.Anchored = true
	end
	BaseWeld.Part1 = VRUI.Base
	BaseWeld.C1 = CFrame.new(0, -0.2, 0)
	BaseWeld.Parent = VRUI.Base

	VRUI.Billboard = Instance.new("Part")
	VRUI.Billboard.Size = Vector3.new(1.1, 1, 0.01)
	VRUI.Billboard.Transparency = 1
	VRUI.Billboard.CanCollide = false
	VRUI.Billboard.Massless = true
	VRUI.Billboard.Parent = VRMenuParts

	local MenuWeld = Instance.new("Weld")
	MenuWeld.Part0 = VRUI.Base
	MenuWeld.Part1 = VRUI.Billboard
	MenuWeld.C1 = CFrame.new(-0.17, -0.57, 0) * CFrame.Angles(math.rad(-90), math.rad(90), 0)
	MenuWeld.Parent = VRUI.Billboard

	local SurfaceGui
	if VRService.VREnabled then
		SurfaceGui = Instance.new("SurfaceGui", ChosenGui)
		SurfaceGui.Adornee = VRUI.Billboard
		SurfaceGui.AlwaysOnTop = true
		SurfaceGui.ResetOnSpawn = false
		SurfaceGui.CanvasSize = Vector2.new(572, 512)
		SurfaceGui.Name = "VRMenu"
	else
		SurfaceGui = Instance.new("ScreenGui")
		SurfaceGui.ResetOnSpawn = false
		SurfaceGui.Name = "PCMenu"
		SurfaceGui.IgnoreGuiInset = true
		SurfaceGui.Parent = RunService:IsStudio() and ChosenGui or game.CoreGui
	end

	if RunService:IsStudio() and VRService.VREnabled then
		MenuWeld.Part0 = game.Players.LocalPlayer.Character:WaitForChild("Head")
		MenuWeld.C1 = CFrame.new(0, 0.3, -0.5)
	end

	local MainFrame = Instance.new("Frame")
	MainFrame.Name = "Main"
	MainFrame.Parent = SurfaceGui
	MainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 25)
	MainFrame.BorderSizePixel = 0
	MainFrame.Position = UDim2.new(0.5, -(Size.X.Scale / 2), 0, 100)
	MainFrame.Size = VRService.VREnabled and UDim2.new(1, 0, 1, 0) or Size
	MainFrame.ClipsDescendants = true
	CreateCorner(MainFrame, 8)

	local TitleBar = Instance.new("Frame")
	TitleBar.Name = "TitleBar"
	TitleBar.Parent = MainFrame
	TitleBar.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
	TitleBar.BorderSizePixel = 0
	TitleBar.Size = UDim2.new(1, 0, 0, 35)
	CreateCorner(TitleBar, 8)

	local TitleFix = Instance.new("Frame")
	TitleFix.Name = "TitleFix"
	TitleFix.Parent = TitleBar
	TitleFix.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
	TitleFix.BorderSizePixel = 0
	TitleFix.Position = UDim2.new(0, 0, 0.5, 0)
	TitleFix.Size = UDim2.new(1, 0, 0.5, 0)

	local TitleLabel = Instance.new("TextLabel")
	TitleLabel.Name = "Title"
	TitleLabel.Parent = TitleBar
	TitleLabel.BackgroundTransparency = 1
	TitleLabel.Position = UDim2.new(0, 15, 0, 0)
	TitleLabel.Size = UDim2.new(1, -30, 1, 0)
	TitleLabel.Font = Enum.Font.GothamBold
	TitleLabel.Text = Title
	TitleLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
	TitleLabel.TextSize = 13
	TitleLabel.TextXAlignment = Enum.TextXAlignment.Left

	-- Sidebar Setup
	local Sidebar = Instance.new("Frame")
	Sidebar.Name = "Sidebar"
	Sidebar.Parent = MainFrame
	Sidebar.BackgroundColor3 = Color3.fromRGB(25, 25, 30)
	Sidebar.BorderSizePixel = 0
	Sidebar.Position = UDim2.new(0, 0, 0, 35)
	Sidebar.Size = UDim2.new(0, 120, 1, -35)
	CreateCorner(Sidebar, 8)

	local SidebarFix = Instance.new("Frame")
	SidebarFix.Name = "SidebarFix"
	SidebarFix.Parent = Sidebar
	SidebarFix.BackgroundColor3 = Color3.fromRGB(25, 25, 30)
	SidebarFix.BorderSizePixel = 0
	SidebarFix.Position = UDim2.new(0.5, 0, 0, 0)
	SidebarFix.Size = UDim2.new(0.5, 0, 1, 0)

	local TabContainer = Instance.new("ScrollingFrame")
	TabContainer.Name = "TabContainer"
	TabContainer.Parent = Sidebar
	TabContainer.BackgroundTransparency = 1
	TabContainer.Position = UDim2.new(0, 0, 0, 10)
	TabContainer.Size = UDim2.new(1, 0, 1, -20)
	TabContainer.ScrollBarThickness = 12
	TabContainer.BorderSizePixel = 0
	TabContainer.CanvasSize = UDim2.new(0, 0, 0, 0)

	local TabLayout = Instance.new("UIListLayout")
	TabLayout.Parent = TabContainer
	TabLayout.SortOrder = Enum.SortOrder.LayoutOrder
	TabLayout.Padding = UDim.new(0, 5)

	local TabPadding = Instance.new("UIPadding")
	TabPadding.Parent = TabContainer
	TabPadding.PaddingLeft = UDim.new(0, 10)
	TabPadding.PaddingRight = UDim.new(0, 10)

	-- Content Setup
	local Content = Instance.new("Frame")
	Content.Name = "Content"
	Content.Parent = MainFrame
	Content.BackgroundTransparency = 1
	Content.Position = UDim2.new(0, 120, 0, 35)
	Content.Size = UDim2.new(0.985, -120, 1.005, -35)

	local ContentContainer = Instance.new("ScrollingFrame")
	ContentContainer.Name = "ContentContainer"
	ContentContainer.Parent = Content
	ContentContainer.BorderSizePixel = 0
	ContentContainer.BackgroundTransparency = 1
	ContentContainer.ScrollBarThickness = 4
	ContentContainer.ScrollBarImageColor3 = Color3.fromRGB(0, 0, 0)
	ContentContainer.ScrollBarImageTransparency = 0.4
	ContentContainer.Visible = true
	ContentContainer.VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar
	ContentContainer.AutomaticCanvasSize = Enum.AutomaticSize.X
	ContentContainer.Size = UDim2.new(0.969, 0, 0.992, 0)

	local ContentLayout = Instance.new("UIListLayout")
	ContentLayout.Parent = ContentContainer
	ContentLayout.SortOrder = Enum.SortOrder.LayoutOrder
	ContentLayout.Padding = UDim.new(0, 10)

	local ContentPadding = Instance.new("UIPadding")
	ContentPadding.Parent = ContentContainer
	ContentPadding.PaddingTop = UDim.new(0, 15)
	ContentPadding.PaddingBottom = UDim.new(0, 15)
	ContentPadding.PaddingLeft = UDim.new(0, 15)
	ContentPadding.PaddingRight = UDim.new(0, 15)

	-- Dragging Functionality
	local Dragging = false
	local DragStart = nil
	local StartPos = nil

	TitleBar.InputBegan:Connect(function(Input)
		if Input.UserInputType == Enum.UserInputType.MouseButton1 then
			Dragging = true
			DragStart = Input.Position
			StartPos = MainFrame.Position
		end
	end)

	UserInputService.InputChanged:Connect(function(Input)
		if Dragging and Input.UserInputType == Enum.UserInputType.MouseMovement then
			local Delta = Input.Position - DragStart
			MainFrame.Position = UDim2.new(StartPos.X.Scale, StartPos.X.Offset + Delta.X, StartPos.Y.Scale, StartPos.Y.Offset + Delta.Y)
		end
	end)

	UserInputService.InputEnded:Connect(function(Input)
		if Input.UserInputType == Enum.UserInputType.MouseButton1 then
			Dragging = false
		end
	end)

	-- Window Management
	local Tabs = {}
	local CurrentTab = nil

	local Window = {
		Main = MainFrame,
		Tabs = Tabs,
		TabContainer = TabContainer,
		TabLayout = TabLayout,
		ContentContainer = ContentContainer,
		ContentLayout = ContentLayout
	}

	function Window:CreateTab(Name)
		local TabButton = Instance.new("TextButton")
		TabButton.Name = Name
		TabButton.Parent = self.TabContainer
		TabButton.BackgroundColor3 = Color3.fromRGB(35, 35, 40)
		TabButton.BorderSizePixel = 0
		TabButton.Size = UDim2.new(0.997, 0, 0, 30)
		TabButton.Font = Enum.Font.Gotham
		TabButton.Text = Name
		TabButton.TextColor3 = Color3.fromRGB(160, 160, 160)
		TabButton.TextSize = 12
		CreateCorner(TabButton, 6)

		local TabContent = Instance.new("ScrollingFrame")
		TabContent.Name = Name .. "Content"
		TabContent.Parent = self.ContentContainer
		TabContent.BackgroundTransparency = 1
		TabContent.Size = UDim2.new(1, 0, 1, 0)
		TabContent.Visible = false

		local TabContentLayout = Instance.new("UIListLayout")
		TabContentLayout.Parent = TabContent
		TabContentLayout.SortOrder = Enum.SortOrder.LayoutOrder
		TabContentLayout.Padding = UDim.new(0, 10)

		local Tab = {
			Button = TabButton,
			Content = TabContent,
			Layout = TabContentLayout,
			Spacers = {}
		}

		TabButton.MouseButton1Click:Connect(function()
			for _, OtherTab in pairs(self.Tabs) do
				OtherTab.Button.BackgroundColor3 = Color3.fromRGB(35, 35, 40)
				OtherTab.Button.TextColor3 = Color3.fromRGB(160, 160, 160)
				OtherTab.Content.Visible = false
			end
			TabButton.BackgroundColor3 = Color3.fromRGB(45, 45, 55)
			TabButton.TextColor3 = Color3.fromRGB(200, 200, 200)
			TabContent.Visible = true
			CurrentTab = Tab
		end)

		self.Tabs[Name] = Tab

		if not CurrentTab then
			TabButton.BackgroundColor3 = Color3.fromRGB(45, 45, 55)
			TabButton.TextColor3 = Color3.fromRGB(200, 200, 200)
			TabContent.Visible = true
			CurrentTab = Tab
		end

		self.TabLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
			self.TabContainer.CanvasSize = UDim2.new(0, 0, 0, self.TabLayout.AbsoluteContentSize.Y)
		end)

		function Tab:AddSpacer(Title)
			local SpacerFrame = Instance.new("Frame")
			SpacerFrame.Name = "Spacer"
			SpacerFrame.Parent = self.Content
			SpacerFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
			SpacerFrame.BorderSizePixel = 0
			SpacerFrame.Size = UDim2.new(0.974, 0, 0, 141)
			CreateCorner(SpacerFrame, 8)

			local SpacerTitle = Instance.new("TextLabel")
			SpacerTitle.Parent = SpacerFrame
			SpacerTitle.BackgroundTransparency = 1
			SpacerTitle.Position = UDim2.new(0, 12, 0, 6)
			SpacerTitle.Size = UDim2.new(1, -24, 0, 25)
			SpacerTitle.Font = Enum.Font.GothamBold
			SpacerTitle.Text = Title
			SpacerTitle.TextColor3 = Color3.fromRGB(180, 180, 180)
			SpacerTitle.TextSize = 13
			SpacerTitle.TextXAlignment = Enum.TextXAlignment.Left

			local SpacerContent = Instance.new("Frame")
			SpacerContent.Parent = SpacerFrame
			SpacerContent.BackgroundTransparency = 1
			SpacerContent.Position = UDim2.new(0, 0, 0, 25)
			SpacerContent.Size = UDim2.new(1, 0, 1, -25)

			local SpacerLayout = Instance.new("UIListLayout")
			SpacerLayout.Parent = SpacerContent
			SpacerLayout.SortOrder = Enum.SortOrder.LayoutOrder
			SpacerLayout.Padding = UDim.new(0, 5)

			local SpacerPadding = Instance.new("UIPadding")
			SpacerPadding.Parent = SpacerContent
			SpacerPadding.PaddingTop = UDim.new(0, 8)
			SpacerPadding.PaddingBottom = UDim.new(0, 8)
			SpacerPadding.PaddingLeft = UDim.new(0, 12)
			SpacerPadding.PaddingRight = UDim.new(0, 12)

			local SpacerObj = {
				Frame = SpacerFrame,
				Content = SpacerContent,
				Layout = SpacerLayout,
				Items = {}
			}

			function SpacerObj:UpdateSpacerSize()
				task.spawn(function()
					task.wait()
					local TitleHeight = 25
					local PaddingHeight = 16
					local ContentHeight = self.Layout.AbsoluteContentSize.Y
					local TotalHeight = TitleHeight + PaddingHeight + ContentHeight
					self.Frame.Size = UDim2.new(0.974, 0, 0, math.max(40, TotalHeight))

					task.spawn(function()
						task.wait()
						local TotalContentHeight = 0
						for _, Spacer in pairs(CurrentTab.Spacers) do
							TotalContentHeight += Spacer.Frame.AbsoluteSize.Y + 10
						end
						CurrentTab.Content.CanvasSize = UDim2.new(0, 0, 0, TotalContentHeight + 30)
					end)
				end)
			end

			SpacerLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
				SpacerObj:UpdateSpacerSize()
			end)

			function SpacerObj:AddButton(Text, Callback)
				local Button = Instance.new("TextButton")
				Button.Name = "Button"
				Button.Parent = self.Content
				Button.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
				Button.BorderSizePixel = 0
				Button.Size = UDim2.new(1, 0, 0, 30)
				Button.Font = Enum.Font.Gotham
				Button.Text = ""
				Button.TextColor3 = Color3.fromRGB(190, 190, 190)
				Button.TextSize = 12
				CreateCorner(Button, 6)

				local Label = Instance.new("TextLabel")
				Label.Parent = Button
				Label.BackgroundTransparency = 1
				Label.Position = UDim2.new(0, 10, 0, 0)
				Label.Size = UDim2.new(1, -50, 1, 0)
				Label.Font = Enum.Font.Gotham
				Label.Text = Text
				Label.TextColor3 = Color3.fromRGB(190, 190, 190)
				Label.TextSize = 14
				Label.TextXAlignment = Enum.TextXAlignment.Left

				Button.MouseEnter:Connect(function()
					TweenService:Create(Button, TweenInfo.new(0.2), { BackgroundColor3 = Color3.fromRGB(50, 50, 60) }):Play()
				end)

				Button.MouseLeave:Connect(function()
					TweenService:Create(Button, TweenInfo.new(0.2), { BackgroundColor3 = Color3.fromRGB(40, 40, 50) }):Play()
				end)

				Button.MouseButton1Click:Connect(Callback or function() end)

				table.insert(self.Items, { Element = Button, Height = 30 })
				self:UpdateSpacerSize()

				return Button
			end

			function SpacerObj:AddToggle(Text, Default, Callback)
				local Toggle = Instance.new("Frame")
				Toggle.Name = "Toggle"
				Toggle.Parent = self.Content
				Toggle.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
				Toggle.BorderSizePixel = 0
				Toggle.Size = UDim2.new(1, 0, 0, 30)
				CreateCorner(Toggle, 6)

				local Label = Instance.new("TextLabel")
				Label.Parent = Toggle
				Label.BackgroundTransparency = 1
				Label.Position = UDim2.new(0, 10, 0, 0)
				Label.Size = UDim2.new(1, -50, 1, 0)
				Label.Font = Enum.Font.Gotham
				Label.Text = Text
				Label.TextColor3 = Color3.fromRGB(190, 190, 190)
				Label.TextSize = 12
				Label.TextXAlignment = Enum.TextXAlignment.Left

				local Switch = Instance.new("Frame")
				Switch.Parent = Toggle
				Switch.BackgroundColor3 = Default and Color3.fromRGB(70, 120, 200) or Color3.fromRGB(50, 50, 60)
				Switch.BorderSizePixel = 0
				Switch.Position = UDim2.new(1, -35, 0.5, -7)
				Switch.Size = UDim2.new(0, 28, 0, 14)
				CreateCorner(Switch, 7)

				local Knob = Instance.new("Frame")
				Knob.Parent = Switch
				Knob.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
				Knob.BorderSizePixel = 0
				Knob.Position = Default and UDim2.new(1, -12, 0.5, -5) or UDim2.new(0, 2, 0.5, -5)
				Knob.Size = UDim2.new(0, 10, 0, 10)
				CreateCorner(Knob, 5)

				local State = Default

				local function UpdateToggle()
					local SwitchTween = TweenService:Create(Switch, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {
						BackgroundColor3 = State and Color3.fromRGB(70, 120, 200) or Color3.fromRGB(50, 50, 60)
					})
					local KnobTween = TweenService:Create(Knob, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {
						Position = State and UDim2.new(1, -12, 0.5, -5) or UDim2.new(0, 2, 0.5, -5)
					})
					SwitchTween:Play()
					KnobTween:Play()
				end

				local Button = Instance.new("TextButton")
				Button.Parent = Toggle
				Button.BackgroundTransparency = 1
				Button.Size = UDim2.new(1, 0, 1, 0)
				Button.Text = ""

				Button.MouseButton1Click:Connect(function()
					State = not State
					UpdateToggle()
					if Callback then Callback(State) end
				end)

				UpdateToggle()
				table.insert(self.Items, { Element = Toggle, Height = 30 })
				self:UpdateSpacerSize()

				return {
					SetValue = function(Value)
						State = Value
						UpdateToggle()
					end,
					GetValue = function()
						return State
					end
				}
			end

			function SpacerObj:AddRGB(Text, DefaultR, DefaultG, DefaultB, Callback)
				local RGBFrame = Instance.new("Frame")
				RGBFrame.Name = "RGBButton"
				RGBFrame.Parent = self.Content
				RGBFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
				RGBFrame.BorderSizePixel = 0
				RGBFrame.Size = UDim2.new(1, 0, 0, 60)
				CreateCorner(RGBFrame, 6)

				local Label = Instance.new("TextLabel")
				Label.Parent = RGBFrame
				Label.BackgroundTransparency = 1
				Label.Position = UDim2.new(0, 12, 0, 4)
				Label.Size = UDim2.new(1, -24, 0, 20)
				Label.Font = Enum.Font.Gotham
				Label.Text = Text
				Label.TextColor3 = Color3.fromRGB(190, 190, 190)
				Label.TextSize = 12
				Label.TextXAlignment = Enum.TextXAlignment.Left

				local InputFrame = Instance.new("Frame")
				InputFrame.Parent = RGBFrame
				InputFrame.BorderSizePixel = 0
				InputFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
				InputFrame.Size = UDim2.new(1, -24, 0, 28)
				InputFrame.Position = UDim2.new(0, 12, 1, -36)
				CreateCorner(InputFrame, 6)
				CreateStroke(InputFrame, Color3.fromRGB(50, 50, 50), 1, 0.5)

				local RLabel = Instance.new("TextLabel")
				RLabel.Parent = InputFrame
				RLabel.BackgroundTransparency = 1
				RLabel.Size = UDim2.new(0, 15, 1, 0)
				RLabel.Position = UDim2.new(0, 8, 0, 0)
				RLabel.Text = "R"
				RLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
				RLabel.TextSize = 12
				RLabel.Font = Enum.Font.GothamBold
				RLabel.TextXAlignment = Enum.TextXAlignment.Center

				local RTextBox = Instance.new("TextBox")
				RTextBox.Parent = InputFrame
				RTextBox.BorderSizePixel = 0
				RTextBox.BackgroundColor3 = Color3.fromRGB(45, 45, 55)
				RTextBox.Size = UDim2.new(0, 32, 0, 20)
				RTextBox.Position = UDim2.new(0, 28, 0, 4)
				RTextBox.Text = tostring(math.floor(DefaultR * 255))
				RTextBox.TextColor3 = Color3.fromRGB(200, 200, 200)
				RTextBox.TextSize = 11
				RTextBox.Font = Enum.Font.Gotham
				RTextBox.TextXAlignment = Enum.TextXAlignment.Center
				RTextBox.PlaceholderText = "0-255"
				RTextBox.PlaceholderColor3 = Color3.fromRGB(120, 120, 120)
				CreateCorner(RTextBox, 4)

				local GLabel = Instance.new("TextLabel")
				GLabel.Parent = InputFrame
				GLabel.BackgroundTransparency = 1
				GLabel.Size = UDim2.new(0, 15, 1, 0)
				GLabel.Position = UDim2.new(0, 68, 0, 0)
				GLabel.Text = "G"
				GLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
				GLabel.TextSize = 12
				GLabel.Font = Enum.Font.GothamBold
				GLabel.TextXAlignment = Enum.TextXAlignment.Center

				local GTextBox = Instance.new("TextBox")
				GTextBox.Parent = InputFrame
				GTextBox.BorderSizePixel = 0
				GTextBox.BackgroundColor3 = Color3.fromRGB(45, 45, 55)
				GTextBox.Size = UDim2.new(0, 32, 0, 20)
				GTextBox.Position = UDim2.new(0, 88, 0, 4)
				GTextBox.Text = tostring(math.floor(DefaultG * 255))
				GTextBox.TextColor3 = Color3.fromRGB(200, 200, 200)
				GTextBox.TextSize = 11
				GTextBox.Font = Enum.Font.Gotham
				GTextBox.TextXAlignment = Enum.TextXAlignment.Center
				GTextBox.PlaceholderText = "0-255"
				GTextBox.PlaceholderColor3 = Color3.fromRGB(120, 120, 120)
				CreateCorner(GTextBox, 4)

				local BLabel = Instance.new("TextLabel")
				BLabel.Parent = InputFrame
				BLabel.BackgroundTransparency = 1
				BLabel.Size = UDim2.new(0, 15, 1, 0)
				BLabel.Position = UDim2.new(0, 128, 0, 0)
				BLabel.Text = "B"
				BLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
				BLabel.TextSize = 12
				BLabel.Font = Enum.Font.GothamBold
				BLabel.TextXAlignment = Enum.TextXAlignment.Center

				local BTextBox = Instance.new("TextBox")
				BTextBox.Parent = InputFrame
				BTextBox.BorderSizePixel = 0
				BTextBox.BackgroundColor3 = Color3.fromRGB(45, 45, 55)
				BTextBox.Size = UDim2.new(0, 32, 0, 20)
				BTextBox.Position = UDim2.new(0, 148, 0, 4)
				BTextBox.Text = tostring(math.floor(DefaultB * 255))
				BTextBox.TextColor3 = Color3.fromRGB(200, 200, 200)
				BTextBox.TextSize = 11
				BTextBox.Font = Enum.Font.Gotham
				BTextBox.TextXAlignment = Enum.TextXAlignment.Center
				BTextBox.PlaceholderText = "0-255"
				BTextBox.PlaceholderColor3 = Color3.fromRGB(120, 120, 120)
				CreateCorner(BTextBox, 4)

				local SetButton = Instance.new("TextButton")
				SetButton.Parent = InputFrame
				SetButton.BorderSizePixel = 0
				SetButton.BackgroundColor3 = Color3.fromRGB(70, 120, 200)
				SetButton.Size = UDim2.new(0, 40, 0, 20)
				SetButton.Position = UDim2.new(1, -48, 0, 4)
				SetButton.Text = "Apply"
				SetButton.TextColor3 = Color3.fromRGB(255, 255, 255)
				SetButton.TextSize = 10
				SetButton.Font = Enum.Font.GothamBold
				CreateCorner(SetButton, 4)

				local ColorPreview = Instance.new("Frame")
				ColorPreview.Parent = InputFrame
				ColorPreview.BorderSizePixel = 0
				ColorPreview.BackgroundColor3 = Color3.fromRGB(DefaultR * 255, DefaultG * 255, DefaultB * 255)
				ColorPreview.Size = UDim2.new(0, 20, 0, 20)
				ColorPreview.Position = UDim2.new(1, -72, 0, 4)
				CreateCorner(ColorPreview, 4)
				CreateStroke(ColorPreview, Color3.fromRGB(80, 80, 90), 1, 0.45)

				local function Validate(TextBox, Value)
					local Num = tonumber(Value) or 255
					Num = math.clamp(Num, 0, 255)
					TextBox.Text = tostring(Num)
					return Num
				end

				local function UpdateColorPreview()
					local R = tonumber(RTextBox.Text) or 255
					local G = tonumber(GTextBox.Text) or 255
					local B = tonumber(BTextBox.Text) or 255
					TweenService:Create(ColorPreview, TweenInfo.new(0.2), {
						BackgroundColor3 = Color3.fromRGB(R, G, B)
					}):Play()
				end

				RTextBox.FocusLost:Connect(function()
					Validate(RTextBox, RTextBox.Text)
					UpdateColorPreview()
				end)
				RTextBox:GetPropertyChangedSignal("Text"):Connect(UpdateColorPreview)

				GTextBox.FocusLost:Connect(function()
					Validate(GTextBox, GTextBox.Text)
					UpdateColorPreview()
				end)
				GTextBox:GetPropertyChangedSignal("Text"):Connect(UpdateColorPreview)

				BTextBox.FocusLost:Connect(function()
					Validate(BTextBox, BTextBox.Text)
					UpdateColorPreview()
				end)
				BTextBox:GetPropertyChangedSignal("Text"):Connect(UpdateColorPreview)

				SetButton.MouseEnter:Connect(function()
					TweenService:Create(SetButton, TweenInfo.new(0.2), { BackgroundColor3 = Color3.fromRGB(80, 130, 210) }):Play()
				end)

				SetButton.MouseLeave:Connect(function()
					TweenService:Create(SetButton, TweenInfo.new(0.2), { BackgroundColor3 = Color3.fromRGB(70, 120, 200) }):Play()
				end)

				SetButton.MouseButton1Click:Connect(function()
					local R = Validate(RTextBox, RTextBox.Text)
					local G = Validate(GTextBox, GTextBox.Text)
					local B = Validate(BTextBox, BTextBox.Text)

					TweenService:Create(SetButton, TweenInfo.new(0.1, Enum.EasingStyle.Quad), {
						BackgroundColor3 = Color3.fromRGB(60, 110, 180),
						Size = UDim2.new(0, 38, 0, 18)
					}):Play()

					if Callback then Callback(R, G, B) end

					task.spawn(function()
						task.wait(0.1)
						TweenService:Create(SetButton, TweenInfo.new(0.15, Enum.EasingStyle.Quad), {
							BackgroundColor3 = Color3.fromRGB(70, 120, 200),
							Size = UDim2.new(0, 40, 0, 20)
						}):Play()
					end)
				end)

				table.insert(self.Items, { Element = RGBFrame, Height = 60 })
				self:UpdateSpacerSize()

				return {
					SetValues = function(R, G, B)
						RTextBox.Text = tostring(R or 255)
						GTextBox.Text = tostring(G or 255)
						BTextBox.Text = tostring(B or 255)
						UpdateColorPreview()
					end,
					GetValues = function()
						return tonumber(RTextBox.Text) or 255, tonumber(GTextBox.Text) or 255, tonumber(BTextBox.Text) or 255
					end
				}
			end

			function SpacerObj:AddSlider(Text, Min, Max, Default, Callback, Step)
				local Slider = Instance.new("Frame")
				Slider.Name = "Slider"
				Slider.Parent = self.Content
				Slider.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
				Slider.BorderSizePixel = 0
				Slider.Size = UDim2.new(1, 0, 0, 30)
				CreateCorner(Slider, 6)

				local Label = Instance.new("TextLabel")
				Label.Parent = Slider
				Label.BackgroundTransparency = 1
				Label.Position = UDim2.new(0, 10, 0, 0)
				Label.Size = UDim2.new(1, -98, 1, 0)
				Label.Font = Enum.Font.Gotham
				Label.Text = Text
				Label.TextColor3 = Color3.fromRGB(190, 190, 190)
				Label.TextSize = 12
				Label.TextXAlignment = Enum.TextXAlignment.Left

				local SliderFrame = Instance.new("Frame")
				SliderFrame.Parent = Slider
				SliderFrame.BorderSizePixel = 0
				SliderFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
				SliderFrame.Size = UDim2.new(0, 78, 0, 20)
				SliderFrame.Position = UDim2.new(1, -88, 0.5, -10)
				SliderFrame.Name = "SliderFrame"
				CreateCorner(SliderFrame, 6)

				local Minus = Instance.new("TextButton")
				Minus.Parent = SliderFrame
				Minus.BackgroundColor3 = Color3.fromRGB(35, 35, 40)
				Minus.Position = UDim2.new(0, 0, 0, 0)
				Minus.Size = UDim2.new(0, 20, 0, 20)
				Minus.Text = "<"
				Minus.TextColor3 = Color3.fromRGB(190, 190, 190)
				Minus.TextSize = 12
				Minus.Font = Enum.Font.GothamBold
				Minus.BorderSizePixel = 0
				CreateCorner(Minus, 6)

				local Plus = Instance.new("TextButton")
				Plus.Parent = SliderFrame
				Plus.BackgroundColor3 = Color3.fromRGB(35, 35, 40)
				Plus.Position = UDim2.new(1, -20, 0, 0)
				Plus.Size = UDim2.new(0, 20, 0, 20)
				Plus.Text = ">"
				Plus.TextColor3 = Color3.fromRGB(190, 190, 190)
				Plus.TextSize = 12
				Plus.Font = Enum.Font.GothamBold
				Plus.BorderSizePixel = 0
				CreateCorner(Plus, 6)

				local ValueBox = Instance.new("TextLabel")
				ValueBox.Parent = SliderFrame
				ValueBox.BorderSizePixel = 0
				ValueBox.BackgroundColor3 = Color3.fromRGB(35, 35, 40)
				ValueBox.Size = UDim2.new(0, 38, 0, 20)
				ValueBox.Position = UDim2.new(0, 20, 0, 0)
				ValueBox.Text = FormatNumber(Default)
				ValueBox.TextColor3 = Color3.fromRGB(255, 255, 255)
				ValueBox.TextSize = 15
				ValueBox.Font = Enum.Font.GothamBold
				ValueBox.TextScaled = false
				CreateCorner(ValueBox, 6)

				local Value = Default
				local StepSize = Step or 1

				local function UpdateValue(NewValue)
					Value = math.clamp(NewValue, Min, Max)
					Value = math.floor(Value / StepSize + 0.5) * StepSize
					ValueBox.Text = FormatNumber(Value)
					if Callback then Callback(Value) end
				end

				local function AnimateButton(Btn, Hover)
					local Color = Hover and Color3.fromRGB(50, 50, 60) or Color3.fromRGB(35, 35, 40)
					TweenService:Create(Btn, TweenInfo.new(0.2), { BackgroundColor3 = Color }):Play()
				end

				Minus.MouseEnter:Connect(function() AnimateButton(Minus, true) end)
				Minus.MouseLeave:Connect(function() AnimateButton(Minus, false) end)
				Plus.MouseEnter:Connect(function() AnimateButton(Plus, true) end)
				Plus.MouseLeave:Connect(function() AnimateButton(Plus, false) end)

				Minus.MouseButton1Click:Connect(function()
					local NewValue = Value - StepSize
					if NewValue >= Min then
						UpdateValue(NewValue)
						TweenService:Create(Minus, TweenInfo.new(0.1), { BackgroundColor3 = Color3.fromRGB(60, 60, 70) }):Play()
						task.spawn(function()
							task.wait(0.1)
							TweenService:Create(Minus, TweenInfo.new(0.1), { BackgroundColor3 = Color3.fromRGB(35, 35, 40) }):Play()
						end)
					end
				end)

				Plus.MouseButton1Click:Connect(function()
					local NewValue = Value + StepSize
					if NewValue <= Max then
						UpdateValue(NewValue)
						TweenService:Create(Plus, TweenInfo.new(0.1), { BackgroundColor3 = Color3.fromRGB(60, 60, 70) }):Play()
						task.spawn(function()
							task.wait(0.1)
							TweenService:Create(Plus, TweenInfo.new(0.1), { BackgroundColor3 = Color3.fromRGB(35, 35, 40) }):Play()
						end)
					end
				end)

				table.insert(self.Items, { Element = Slider, Height = 30 })
				self:UpdateSpacerSize()

				return {
					SetValue = function(NewValue)
						UpdateValue(NewValue)
					end,
					GetValue = function()
						return Value
					end
				}
			end

			function SpacerObj:AddDropdown(Text, Options, DefaultOption, Callback)
				local Dropdown = { CurrentOption = DefaultOption or Options[1] }
				local IsOpen = false

				local DropdownFrame = Instance.new("Frame")
				DropdownFrame.Name = "DropdownFrame"
				DropdownFrame.Parent = self.Content
				DropdownFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
				DropdownFrame.BorderSizePixel = 0
				DropdownFrame.Size = UDim2.new(1, 0, 0, 30)
				CreateCorner(DropdownFrame, 6)

				local DropdownTitleLabel = Instance.new("TextLabel")
				DropdownTitleLabel.Parent = DropdownFrame
				DropdownTitleLabel.BackgroundTransparency = 1
				DropdownTitleLabel.Position = UDim2.new(0, 10, 0, 0)
				DropdownTitleLabel.Size = UDim2.new(1, -98, 1, 0)
				DropdownTitleLabel.Font = Enum.Font.Gotham
				DropdownTitleLabel.Text = Text
				DropdownTitleLabel.TextColor3 = Color3.fromRGB(190, 190, 190)
				DropdownTitleLabel.TextSize = 12
				DropdownTitleLabel.TextXAlignment = Enum.TextXAlignment.Left

				local DropdownToggle = Instance.new("TextButton")
				DropdownToggle.Name = "DropdownToggleButton"
				DropdownToggle.Parent = DropdownFrame
				DropdownToggle.BackgroundTransparency = 1
				DropdownToggle.Position = UDim2.new(1, -30, 0, -2.8)
				DropdownToggle.Size = UDim2.new(0, 30, 1, 0)
				DropdownToggle.Font = Enum.Font.SourceSansBold
				DropdownToggle.Text = "˄"
				DropdownToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
				DropdownToggle.TextSize = 14

				local DropdownScreenGui = Instance.new("ScreenGui")
				DropdownScreenGui.Name = "DropdownScreenGui"
				DropdownScreenGui.Parent = ChosenGui
				DropdownScreenGui.ResetOnSpawn = false
				DropdownScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
				DropdownScreenGui.DisplayOrder = 10

				local OptionContainer = Instance.new("Frame")
				OptionContainer.Name = "OptionContainer"
				OptionContainer.Parent = DropdownScreenGui
				OptionContainer.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
				OptionContainer.BorderSizePixel = 0
				OptionContainer.Size = UDim2.new(0, 150, 0, 0)
				OptionContainer.Visible = false
				OptionContainer.ClipsDescendants = true
				CreateCorner(OptionContainer, 5)
				CreateStroke(OptionContainer, Color3.fromRGB(45, 45, 45), 0.8, 0)

				local OptionListLayout = Instance.new("UIListLayout")
				OptionListLayout.Parent = OptionContainer
				OptionListLayout.SortOrder = Enum.SortOrder.LayoutOrder
				OptionListLayout.Padding = UDim.new(0, 2)
				OptionListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center

				local OptionPadding = Instance.new("UIPadding")
				OptionPadding.Parent = OptionContainer
				OptionPadding.PaddingTop = UDim.new(0, 2)
				OptionPadding.PaddingBottom = UDim.new(0, 2)
				OptionPadding.PaddingLeft = UDim.new(0, 5)
				OptionPadding.PaddingRight = UDim.new(0, 5)

				local function UpdateDropdown()
					DropdownTitleLabel.Text = Text .. ": " .. Dropdown.CurrentOption
					if Callback then Callback(Dropdown.CurrentOption) end
				end

				local function ToggleDropdown()
					IsOpen = not IsOpen
					DropdownToggle.Text = IsOpen and "˅" or "˄"
					OptionContainer.Visible = IsOpen

					if IsOpen then
						local AbsolutePosition = DropdownToggle.AbsolutePosition
						local AbsoluteSize = DropdownToggle.AbsoluteSize
						local TargetPosition = UDim2.new(0, AbsolutePosition.X, 0, AbsolutePosition.Y + AbsoluteSize.Y + 2)
						OptionContainer.Position = TargetPosition
						local TargetHeight = #Options * 27 + 4
						TweenService:Create(OptionContainer, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {
							Size = UDim2.new(0, 150, 0, TargetHeight)
						}):Play()
						RunService:BindToRenderStep("DropdownPosition", Enum.RenderPriority.Input.Value, function()
							local AbsPos = DropdownToggle.AbsolutePosition
							local AbsSize = DropdownToggle.AbsoluteSize
							OptionContainer.Position = UDim2.new(0, AbsPos.X, 0, AbsPos.Y + AbsSize.Y + 2)
						end)
					else
						RunService:UnbindFromRenderStep("DropdownPosition")
						TweenService:Create(OptionContainer, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {
							Size = UDim2.new(0, 150, 0, 0)
						}):Play()
						task.delay(0.3, function()
							if not IsOpen then OptionContainer.Visible = false end
						end)
					end
				end

				for _, Option in ipairs(Options) do
					local OptionButton = Instance.new("TextButton")
					OptionButton.Name = Option
					OptionButton.Parent = OptionContainer
					OptionButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
					OptionButton.BorderSizePixel = 0
					OptionButton.Size = UDim2.new(1, -10, 0, 25)
					OptionButton.Font = Enum.Font.SourceSans
					OptionButton.Text = Option
					OptionButton.TextColor3 = Color3.fromRGB(255, 255, 255)
					OptionButton.TextSize = 14
					CreateCorner(OptionButton, 5)

					OptionButton.MouseButton1Click:Connect(function()
						Dropdown.CurrentOption = Option
						UpdateDropdown()
						ToggleDropdown()
					end)
				end

				DropdownToggle.MouseButton1Click:Connect(ToggleDropdown)

				Dropdown.Set = function(Value)
					if table.find(Options, Value) then
						Dropdown.CurrentOption = Value
						UpdateDropdown()
					end
				end

				Dropdown.Get = function()
					return Dropdown.CurrentOption
				end

				Dropdown.Set(DefaultOption or Options[1])

				table.insert(self.Items, { Element = DropdownFrame, Height = 30 })
				self:UpdateSpacerSize()

				return Dropdown
			end

			function SpacerObj:AddBind(Title, Default, Callback)
				local BindFrame = Instance.new("Frame")
				BindFrame.Name = "BindFrame"
				BindFrame.Parent = self.Content
				BindFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
				BindFrame.BorderSizePixel = 0
				BindFrame.Size = UDim2.new(1, 0, 0, 30)
				CreateCorner(BindFrame, 6)

				local BindTitleLabel = Instance.new("TextLabel")
				BindTitleLabel.Parent = BindFrame
				BindTitleLabel.BackgroundTransparency = 1
				BindTitleLabel.Position = UDim2.new(0, 10, 0, 0)
				BindTitleLabel.Size = UDim2.new(1, -98, 1, 0)
				BindTitleLabel.Font = Enum.Font.Gotham
				BindTitleLabel.Text = Title
				BindTitleLabel.TextColor3 = Color3.fromRGB(190, 190, 190)
				BindTitleLabel.TextSize = 12
				BindTitleLabel.TextXAlignment = Enum.TextXAlignment.Left

				local BindButton = Instance.new("TextButton")
				BindButton.Name = "BindButton"
				BindButton.Parent = BindFrame
				BindButton.BorderSizePixel = 0
				BindButton.Font = Enum.Font.SourceSans
				BindButton.TextSize = 13
				BindButton.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
				BindButton.Position = UDim2.new(0.888, 0, 0.162, 0)
				BindButton.Size = UDim2.new(0, 22, 0, 22)
				BindButton.Text = Default.Name:upper()
				BindButton.TextColor3 = Color3.fromRGB(255, 255, 255)
				BindButton.ClipsDescendants = true
				BindButton.RichText = true
				CreateCorner(BindButton, 5)
				CreateStroke(BindButton, Color3.fromRGB(45, 45, 45), 0.8, 0)

				local ChosenInput = Default

				BindButton.MouseButton1Click:Connect(function()
					BindButton.Text = "..."
					local InputConnection
					InputConnection = UserInputService.InputBegan:Connect(function(Input, GameProcessed)
						if GameProcessed then return end
						ChosenInput = Input.KeyCode
						if Callback then Callback(ChosenInput) end
						BindButton.Text = ChosenInput.Name
						InputConnection:Disconnect()
					end)
				end)

				table.insert(self.Items, { Element = BindFrame, Height = 30 })
				self:UpdateSpacerSize()
			end
			
			self.Spacers[Title] = SpacerObj
			return SpacerObj
		end

		return Tab
	end

	return Window
end

return UILib
