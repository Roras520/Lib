local EspModule = {}

local Players = game:GetService("Players")
local VRService = game:GetService("VRService")

local Config = {
    -- States
	EspEnabled = true,
    BoxesOn = false,
	NamesOn = false,
	ChamsOn = false,
	DotsOn = false,
	HealthBarOn = false,
	DistanceOn = false,
	PulseEnabled = false,
	RainbowEnabled = false,

    -- Colors
	ChamsColor = Color3.fromRGB(0, 170, 255),
	ChamsOutlineColor = Color3.fromRGB(0, 85, 128),
	ChamsFillTransparency = 0.6,
	ChamsOutlineTransparency = 0.36,
	BoxTransparency = 0.39,
	DotTransparency = 0.4,
	BespColor = Color3.fromRGB(0, 170, 255),
	DespColor = Color3.fromRGB(0, 170, 255),
	NespColor = Color3.fromRGB(0, 170, 255),
	RLineColor = Color3.new(1, 0, 0),
	LLineColor = Color3.new(1, 0, 0),
	PulsePrimaryColor = Color3.fromRGB(0, 170, 255),
	PulseSecondaryColor = Color3.fromRGB(0, 255, 170),
	PulseSpeed = 1,
	RainbowSpeed = 1
}

local LocalPlayer = Players.LocalPlayer
local LocalPlayerName = LocalPlayer.Name
local RedC = Color3.fromRGB(255, 0, 0)

-- Helper Functions
function ColorCheck(Player, EnemyColor, FriendlyColor)
	if workspace:FindFirstChild("PowerUps") then
		return (Player:GetAttribute("ModeTeam") == "Traitor") and EnemyColor or FriendlyColor
	elseif LocalPlayer.Team and Player.Team then
		return (LocalPlayer.Team.Name ~= Player.Team) and EnemyColor or FriendlyColor
	else
		return FriendlyColor
	end
end

function ColorMinus(Color, Step)
	return Color3.fromRGB(Color.R - Step, Color.G - Step, Color.B - Step)
end

-- ESP Functions
function CreateChamsHighlight(Character)
    local Player = game.Players:GetPlayerFromCharacter(Character)
    if not Player then return end

    local isTraitor = false
    if workspace:FindFirstChild("PowerUps") then
        isTraitor = (Player:GetAttribute("ModeTeam") == "Traitor")
    elseif LocalPlayer.Team and Player.Team then
        isTraitor = (LocalPlayer.Team.Name ~= Player.Team.Name)
    end

    local ChamsFillColor, ChamsOutlineColor
    if isTraitor then
        ChamsFillColor = Color3.fromRGB(255, 0, 0)
        ChamsOutlineColor = Color3.fromRGB(255, 0, 0)
    else
        ChamsFillColor = Config.ChamsColor or Color3.fromRGB(0, 170, 255)
        ChamsOutlineColor = Config.ChamsOutlineColor or Color3.fromRGB(0, 85, 128)
    end
    local ChamsFillTransparency = Config.ChamsFillTransparency or 0.6
    local ChamsOutlineTransparency = Config.ChamsOutlineTransparency or 0.36

    local Existing = Character:FindFirstChild("chamshighlight")
    if Existing then
        Existing.FillColor = ChamsFillColor
        Existing.OutlineColor = ChamsOutlineColor
        Existing.FillTransparency = ChamsFillTransparency
        Existing.OutlineTransparency = ChamsOutlineTransparency
        return
    end

    local Highlight = Instance.new("Highlight")
    Highlight.Name = "chamshighlight"
    Highlight.Adornee = Character
    Highlight.FillColor = ChamsFillColor
    Highlight.FillTransparency = ChamsFillTransparency
    Highlight.OutlineColor = ChamsOutlineColor
    Highlight.OutlineTransparency = ChamsOutlineTransparency
    Highlight.Parent = Character
end

function CreateBoxEsp(Character)
	local Player = game.Players:GetPlayerFromCharacter(Character)
	local BoxEspColor = ColorCheck(Player, RedC, Config.BespColor)
	local Existing = Character:FindFirstChild("bespbox")
	if Existing then local Stroke = Existing:FindFirstChild("Frame") and Existing.Frame:FindFirstChild("UIStroke") if Stroke then Stroke.Color = BoxEspColor end return end
	local Billboard = Instance.new("BillboardGui", Character)
	Billboard.Name = "bespbox"
	Billboard.Adornee = Character:FindFirstChild("Torso") or Character.PrimaryPart
	Billboard.Size = UDim2.new(4, 0, 5, 0)
	Billboard.StudsOffset = Vector3.new(0, 0.4, 0)
	Billboard.AlwaysOnTop = true
	local Frame = Instance.new("Frame", Billboard)
	Frame.BackgroundTransparency = 1
	Frame.Size = UDim2.new(1, 0, 1, 0)
	local Stroke = Instance.new("UIStroke", Frame)
	Stroke.Thickness = 1.67
	Stroke.Transparency = Config.BoxTransparency
	Stroke.Color = BoxEspColor
end

function CreateDotEsp(Character)
	local Part = Character:FindFirstChild("Torso") or Character:FindFirstChild("HumanoidRootPart") or Character:FindFirstChild("Root")
	local Player = game.Players:GetPlayerFromCharacter(Character)
	local DotEspColor = ColorCheck(Player, RedC, Config.DespColor)
	if not Part then
		return
	end

	if Part:FindFirstChild("dotespbg") then
		local Dotf = Part:FindFirstChild("dotespbg"):FindFirstChild("dotf")
		if Dotf then
			Dotf.BackgroundColor3 = DotEspColor
		end
		return
	end

	local Billboard = Instance.new("BillboardGui", Part)
	Billboard.Name = "dotespbg"
	Billboard.Adornee = Part
	Billboard.StudsOffset = Vector3.new(0, 0.4, 0)
	Billboard.Size = UDim2.new(0.1, 5, 0.1, 5)
	Billboard.AlwaysOnTop = true
	Billboard.Enabled = true

	local Dotf = Instance.new("Frame", Billboard)
	Dotf.Name = "dotf"
	Dotf.BackgroundColor3 = DotEspColor
	Dotf.Size = UDim2.new(1, 0, 1, 0)
	Dotf.Transparency = Config.DotTransparency
	Dotf.BorderSizePixel = 0

	local Dotc = Instance.new("UICorner", Dotf)
	Dotc.CornerRadius = UDim.new(0.45, 0)
end

function CreateNameEsp(Head)
    if not Head.Parent then return end
	local Player = game.Players:GetPlayerFromCharacter(Head.Parent)
	local NameEspColor = ColorCheck(Player, RedC, Config.NespColor)
	local Existing = Head:FindFirstChild("nameesp")
	
	if Existing then
		local NameLabel = Existing:FindFirstChild("NAME")
		if NameLabel then
			NameLabel.TextColor3 = NameEspColor
		end
		return
	end
	
	local Nespbgui = Instance.new("BillboardGui")
	Nespbgui.Name = "nameesp"
	Nespbgui.Adornee = Head
	Nespbgui.AlwaysOnTop = true
	Nespbgui.ExtentsOffset = Vector3.new(0, 4, 0)
	Nespbgui.Size = UDim2.new(0, 200, 0, 20)
	Nespbgui.Parent = Head
	
	local Namel = Instance.new("TextLabel", Nespbgui)
	Namel.Size = UDim2.new(1, 0, 0.3, 0)
	Namel.Name = "NAME"
	Namel.BorderSizePixel = 0
	Namel.BackgroundTransparency = 1
	Namel.Text = Player.Name and Player.Name:upper()
	Namel.TextColor3 = NameEspColor
	Namel.TextStrokeTransparency = 0.5
	Namel.Font = Enum.Font.SourceSansBold
	Namel.TextSize = VRService.VREnabled and 11 or not VRService.VREnabled and 14
end

function CreateHealthBar(Character)
	local Part = Character:FindFirstChild("Root") or Character:FindFirstChild("HumanoidRootPart")
	local Humanoid = Character:FindFirstChild("Humanoid") or Character:FindFirstChild("VRHealth")
	
	if not Part or not Humanoid then return end
	
	local Existing = Part:FindFirstChild("healthbaresp")
	if Existing then
		local HealthBar = Existing:FindFirstChild("HealthBar")
		local HealthFill = HealthBar and HealthBar:FindFirstChild("Fill")
		if HealthFill and Humanoid then
			local healthPercent = Humanoid:IsA("Humanoid") and (Humanoid.Health / Humanoid.MaxHealth) or (Humanoid.Value / 100)
			HealthFill.Size = UDim2.new(healthPercent, 0, 1, 0)
			HealthFill.BackgroundColor3 = Color3.fromRGB(255 * (1 - healthPercent), 255 * healthPercent, 0)
		end
		return
	end
	
	local Billboard = Instance.new("BillboardGui", Part)
	Billboard.Name = "healthbaresp"
	Billboard.Adornee = Part
	Billboard.Size = UDim2.new(0, 100, 0, 10)
	Billboard.StudsOffset = Vector3.new(0, 3, 0)
	Billboard.AlwaysOnTop = true
	
	local HealthBar = Instance.new("Frame", Billboard)
	HealthBar.Name = "HealthBar"
	HealthBar.Size = UDim2.new(1, 0, 1, 0)
	HealthBar.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	HealthBar.BorderSizePixel = 1
	HealthBar.BorderColor3 = Color3.fromRGB(0, 0, 0)
	
	local Fill = Instance.new("Frame", HealthBar)
	Fill.Name = "Fill"
	Fill.Size = UDim2.new(1, 0, 1, 0)
	Fill.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
	Fill.BorderSizePixel = 0
	
	if Humanoid then
		local healthPercent = Humanoid:IsA("Humanoid") and (Humanoid.Health / Humanoid.MaxHealth) or (Humanoid.Value / 100)
		Fill.Size = UDim2.new(healthPercent, 0, 1, 0)
		Fill.BackgroundColor3 = Color3.fromRGB(255 * (1 - healthPercent), 255 * healthPercent, 0)
	end
end

function CreateDistanceDisplay(Character)
	local Part = Character:FindFirstChild("Root") or Character:FindFirstChild("HumanoidRootPart")
	if not Part then return end
	
	local Existing = Part:FindFirstChild("distanceesp")
	if Existing then
		local DistLabel = Existing:FindFirstChild("DistanceText")
		if DistLabel and LocalPlayer.Character then
			local LocalRoot = LocalPlayer.Character:FindFirstChild("Root") or LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
			if LocalRoot then
				local distance = math.floor((LocalRoot.Position - Part.Position).Magnitude)
				DistLabel.Text = tostring(distance) .. " studs"
			end
		end
		return
	end
	
	local Billboard = Instance.new("BillboardGui", Part)
	Billboard.Name = "distanceesp"
	Billboard.Adornee = Part
	Billboard.Size = UDim2.new(0, 100, 0, 20)
	Billboard.StudsOffset = Vector3.new(0, 2.3, 0)
	Billboard.AlwaysOnTop = true
	
	local DistLabel = Instance.new("TextLabel", Billboard)
	DistLabel.Name = "DistanceText"
	DistLabel.Size = UDim2.new(1, 0, 1, 0)
	DistLabel.BackgroundTransparency = 1
	DistLabel.Text = "0 studs"
	DistLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	DistLabel.TextStrokeTransparency = 0.5
	DistLabel.Font = Enum.Font.SourceSansBold
	DistLabel.TextSize = VRService.VREnabled and 10 or 12
	
	if LocalPlayer.Character then
		local LocalRoot = LocalPlayer.Character:FindFirstChild("Root") or LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
		if LocalRoot then
			local distance = math.floor((LocalRoot.Position - Part.Position).Magnitude)
			DistLabel.Text = tostring(distance) .. " studs"
		end
	end
end

function ClearEsp(Bncd)
	if not LocalPlayer then
		return
	end
	for _, Plr in pairs(game.Players:GetPlayers()) do
		if Plr.Name ~= LocalPlayer.Name and Plr.Character then
			if Bncd == 1 then
				local Bespbox = Plr.Character:FindFirstChild("bespbox")
				if Bespbox then
					Bespbox:Destroy()
				end
			elseif Bncd == 2 then
				local Head = Plr.Character:FindFirstChild("Head")
				if Head then
					local Nesp = Head:FindFirstChild("nameesp")
					if Nesp then
						Nesp:Destroy()
					end
				end
			elseif Bncd == 3 then
				local Chamsesp = Plr.Character:FindFirstChild("chamshighlight")
				if Chamsesp then
					Chamsesp:Destroy()
				end
			elseif Bncd == 4 then
				local Torso = Plr.Character:FindFirstChild("Torso") or Plr.Character:FindFirstChild("HumanoidRootPart")
				if Torso then
					local Dotesp = Torso:FindFirstChild("dotespbg")
					if Dotesp then
						Dotesp:Destroy()
					end
				end
			elseif Bncd == 5 then
				local Part = Plr.Character:FindFirstChild("Root") or Plr.Character:FindFirstChild("HumanoidRootPart")
				if Part then
					local HealthBar = Part:FindFirstChild("healthbaresp")
					if HealthBar then
						HealthBar:Destroy()
					end
				end
			elseif Bncd == 6 then
				local Part = Plr.Character:FindFirstChild("Root") or Plr.Character:FindFirstChild("HumanoidRootPart")
				if Part then
					local Distance = Part:FindFirstChild("distanceesp")
					if Distance then
						Distance:Destroy()
					end
				end
			end
		end
	end
end

local LastEspUpdate = 0
local RainbowHue = 0
function UpdateAllEsp()
	if not Config.EspEnabled then return end
	local CT = tick()
	
	if Config.RainbowEnabled then
		RainbowHue = (RainbowHue + (0.01 * Config.RainbowSpeed)) % 1
	end
	
	if CT - LastEspUpdate >= 2 then
		for _, Plr in pairs(game.Players:GetPlayers()) do
			if Plr.Name ~= LocalPlayerName and Plr.Character then
				if Config.BoxesOn then CreateBoxEsp(Plr.Character) end
				if Config.NamesOn then CreateNameEsp(Plr.Character:FindFirstChild("Head")) end
				if Config.ChamsOn then CreateChamsHighlight(Plr.Character) end
				if Config.DotsOn then CreateDotEsp(Plr.Character) end
				if Config.HealthBarOn then CreateHealthBar(Plr.Character) end
				if Config.DistanceOn then CreateDistanceDisplay(Plr.Character) end
			end
		end
		LastEspUpdate = CT
	end
	
	if Config.HealthBarOn or Config.DistanceOn then
		for _, Plr in pairs(game.Players:GetPlayers()) do
			if Plr.Name ~= LocalPlayerName and Plr.Character then
				if Config.HealthBarOn then CreateHealthBar(Plr.Character) end
				if Config.DistanceOn then CreateDistanceDisplay(Plr.Character) end
			end
		end
	end
	
	if Config.PulseEnabled then
		ApplyPulseEffect()
	end
	
	if Config.RainbowEnabled then
		ApplyRainbowEffect()
	end
end

function ApplyPulseEffect()
	local pulseValue = (math.sin(tick() * Config.PulseSpeed * 2) + 1) / 2
	local pulseColor = Config.PulsePrimaryColor:Lerp(Config.PulseSecondaryColor, pulseValue)
	
	for _, Plr in pairs(game.Players:GetPlayers()) do
		if Plr.Name ~= LocalPlayerName and Plr.Character then
			local Chams = Plr.Character:FindFirstChild("chamshighlight")
			if Chams then
				Chams.FillColor = pulseColor
			end
			
			local Box = Plr.Character:FindFirstChild("bespbox")
			if Box then
				local Stroke = Box:FindFirstChild("Frame") and Box.Frame:FindFirstChild("UIStroke")
				if Stroke then
					Stroke.Color = pulseColor
				end
			end
		end
	end
end

function ApplyRainbowEffect()
	local rainbowColor = Color3.fromHSV(RainbowHue, 1, 1)
	
	for _, Plr in pairs(game.Players:GetPlayers()) do
		if Plr.Name ~= LocalPlayerName and Plr.Character then
			local Chams = Plr.Character:FindFirstChild("chamshighlight")
			if Chams then
				Chams.FillColor = rainbowColor
				Chams.OutlineColor = rainbowColor
			end
			
			local Box = Plr.Character:FindFirstChild("bespbox")
			if Box then
				local Stroke = Box:FindFirstChild("Frame") and Box.Frame:FindFirstChild("UIStroke")
				if Stroke then
					Stroke.Color = rainbowColor
				end
			end
			
			local Head = Plr.Character:FindFirstChild("Head")
			if Head then
				local NameEsp = Head:FindFirstChild("nameesp")
				if NameEsp then
					local NameLabel = NameEsp:FindFirstChild("NAME")
					if NameLabel then
						NameLabel.TextColor3 = rainbowColor
					end
				end
			end
		end
	end
end

function EditConfig(option, value)
	if Config[option] ~= nil then
		Config[option] = value
		print("[Config] Set " .. option .. " to " .. tostring(value))
	else
		warn("[Config] Option '" .. tostring(option) .. "' does not exist.")
	end
end

function GetConfig()
    return Config
end

EspModule.GetConfig = GetConfig
EspModule.EditConfig = EditConfig
EspModule.UpdateAllEsp = UpdateAllEsp
EspModule.ClearEsp = ClearEsp
EspModule.CreateChamsHighlight = CreateChamsHighlight
EspModule.CreateBoxEsp = CreateBoxEsp
EspModule.CreateDotEsp = CreateDotEsp
EspModule.CreateHealthBar = CreateHealthBar
EspModule.CreateDistanceDisplay = CreateDistanceDisplay

return EspModule
