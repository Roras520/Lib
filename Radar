local PlayerRadar = {
    Settings = {
        Enabled = true,
        Size = 250,
        Range = 150,
        Position = UDim2.new(0.75, 0, 0.65, 0),
        UpdateRate = 0.5,
        ShowDistance = true,
        ShowNames = true,
        ShowEnemies = true,
        ShowFriends = true,
        ShowLocalPlayer = false,
        EnemyColor = Color3.new(1, 0, 0),
        FriendColor = Color3.new(0, 1, 0),
        NeutralColor = Color3.new(1, 1, 0),
        BackgroundTransparency = 0.3,
        BorderColor = Color3.new(1, 1, 1),
        CenterDotColor = Color3.new(0, 1, 1)
    }
}

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

local RadarGui = nil
local RadarFrame = nil
local LastUpdate = 0
local RenderStepName = "PlayerRadarUpdate"

function PlayerRadar.GetSettingsTable()
    return PlayerRadar.Settings
end

function PlayerRadar.CreateRadar()
    if RadarGui then RadarGui:Destroy() end
    
    RadarGui = Instance.new("ScreenGui")
    RadarGui.Name = "PlayerRadar"
    RadarGui.ResetOnSpawn = false
    RadarGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    RadarFrame = Instance.new("Frame", RadarGui)
    RadarFrame.Size = UDim2.new(0, PlayerRadar.Settings.Size, 0, PlayerRadar.Settings.Size)
    RadarFrame.Position = PlayerRadar.Settings.Position
    RadarFrame.BackgroundColor3 = Color3.new(0, 0, 0)
    RadarFrame.BackgroundTransparency = PlayerRadar.Settings.BackgroundTransparency
    RadarFrame.BorderSizePixel = 2
    RadarFrame.BorderColor3 = PlayerRadar.Settings.BorderColor
    
    local CenterDot = Instance.new("Frame", RadarFrame)
    CenterDot.Name = "CenterDot"
    CenterDot.Size = UDim2.new(0, 6, 0, 6)
    CenterDot.Position = UDim2.new(0.5, -3, 0.5, -3)
    CenterDot.BackgroundColor3 = PlayerRadar.Settings.CenterDotColor
    CenterDot.BorderSizePixel = 0
    
    local RangeCircle = Instance.new("Frame", RadarFrame)
    RangeCircle.Name = "RangeCircle"
    RangeCircle.Size = UDim2.new(1, 0, 1, 0)
    RangeCircle.BackgroundTransparency = 1
    RangeCircle.BorderSizePixel = 1
    RangeCircle.BorderColor3 = Color3.new(0.5, 0.5, 0.5)
    
    local UICorner = Instance.new("UICorner", RangeCircle)
    UICorner.CornerRadius = UDim.new(0.5, 0)

    local UICorner2 = Instance.new("UICorner", CenterDot)
    UICorner2.CornerRadius = UDim.new(0.5, 0)
    
    local MainCorner = Instance.new("UICorner", RadarFrame)
    MainCorner.CornerRadius = UDim.new(0.5, 0)
    
    RadarGui.Parent = game:GetService("CoreGui")
    
    return RadarGui
end

function PlayerRadar.GetPlayerColor(Player)
    if not Player.Character then return PlayerRadar.Settings.NeutralColor end
    if LocalPlayer.Team and Player.Team then
        return LocalPlayer.Team == Player.Team and PlayerRadar.Settings.FriendColor or PlayerRadar.Settings.EnemyColor
    end
    if LocalPlayer:IsFriendsWith(Player.UserId) then
        return PlayerRadar.Settings.FriendColor
    end
    return PlayerRadar.Settings.EnemyColor
end

function PlayerRadar.UpdateRadar()
    if not RadarFrame or not PlayerRadar.Settings.Enabled then return end
    
    for _, Child in pairs(RadarFrame:GetChildren()) do
        if Child.Name == "PlayerDot" or Child.Name == "PlayerLabel" then
            Child:Destroy()
        end
    end
    
    local LocalCharacter = LocalPlayer.Character
    if not LocalCharacter then return end
    
    local LocalRoot = LocalCharacter:FindFirstChild("HumanoidRootPart") or 
                     LocalCharacter:FindFirstChild("Root") or
                     LocalCharacter:FindFirstChild("Torso")
    if not LocalRoot then return end
    
    local LocalPos = LocalRoot.Position
    local CameraCFrame = Camera.CFrame
    local Forward = CameraCFrame.LookVector
    local Right = CameraCFrame.RightVector
    local RadarRadius = PlayerRadar.Settings.Size / 2
    
    for _, Player in pairs(Players:GetPlayers()) do
        if Player == LocalPlayer and not PlayerRadar.Settings.ShowLocalPlayer then continue end
        
        local Character = Player.Character
        if not Character then continue end
        
        local Root = Character:FindFirstChild("HumanoidRootPart") or 
                    Character:FindFirstChild("Root") or
                    Character:FindFirstChild("Torso")
        if not Root then continue end
        
        local Distance = (Root.Position - LocalPos).Magnitude
        if Distance > PlayerRadar.Settings.Range then continue end
        
        local RelativePos = Root.Position - LocalPos
        local DotForward = RelativePos:Dot(Forward)
        local DotRight = RelativePos:Dot(Right)
        local Angle = math.atan2(DotRight, DotForward)
        local DistanceRatio = Distance / PlayerRadar.Settings.Range
        local RadarX = RadarRadius + math.sin(Angle) * DistanceRatio * RadarRadius
        local RadarY = RadarRadius - math.cos(Angle) * DistanceRatio * RadarRadius
        
        local PlayerDot = Instance.new("Frame", RadarFrame)
        PlayerDot.Name = "PlayerDot"
        PlayerDot.Size = UDim2.new(0, 5.5, 0, 5.5)
        PlayerDot.Position = UDim2.new(0, RadarX - 2, 0, RadarY - 2)
        PlayerDot.BackgroundColor3 = PlayerRadar.GetPlayerColor(Player)
        
        local DotCorner = Instance.new("UICorner", PlayerDot)
        DotCorner.CornerRadius = UDim.new(0.5, 0)
        
        if PlayerRadar.Settings.ShowNames or PlayerRadar.Settings.ShowDistance then
            local Label = Instance.new("TextLabel", RadarFrame)
            Label.Name = "PlayerLabel"
            Label.Size = UDim2.new(0, 60, 0, 15)
            Label.Position = UDim2.new(0, RadarX - 30, 0, RadarY - 20)
            Label.BackgroundTransparency = 1
            Label.TextColor3 = PlayerRadar.GetPlayerColor(Player)
            Label.TextSize = 10
            Label.Font = Enum.Font.SourceSansBold
            
            local LabelText = ""
            if PlayerRadar.Settings.ShowNames then
                LabelText = Player.DisplayName
            end
            if PlayerRadar.Settings.ShowDistance then
                if LabelText ~= "" then LabelText = LabelText .. "\n" end
                LabelText = LabelText .. string.format("%.0f", Distance)
            end
            
            Label.Text = LabelText
        end
    end
end

local function RadarRenderStep()
    LastUpdate = LastUpdate + RunService.RenderStepped:Wait()
    if LastUpdate >= PlayerRadar.Settings.UpdateRate then
        PlayerRadar.UpdateRadar()
        LastUpdate = 0
    end
end

function PlayerRadar.Start()
    PlayerRadar.CreateRadar()
    
    RunService:UnbindFromRenderStep(RenderStepName)
    RunService:BindToRenderStep(RenderStepName, Enum.RenderPriority.Last.Value, RadarRenderStep)
end

function PlayerRadar.Stop()
    RunService:UnbindFromRenderStep(RenderStepName)
    
    if RadarGui then
        RadarGui:Destroy()
        RadarGui = nil
    end
end

function PlayerRadar.Toggle()
    if PlayerRadar.Settings.Enabled then
        PlayerRadar.Stop()
    else
        PlayerRadar.Start()
    end
    PlayerRadar.Settings.Enabled = not PlayerRadar.Settings.Enabled
end

_G.PlayerRadar = PlayerRadar

return PlayerRadar
